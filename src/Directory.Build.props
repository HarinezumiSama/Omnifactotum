<?xml version="1.0" encoding="utf-8"?>

<Project>
    <PropertyGroup>
        <Version>0.15.0</Version>
        <PackageValidationBaselineVersion>0.14.1</PackageValidationBaselineVersion>
    </PropertyGroup>

    <PropertyGroup>
        <VersionSuffix>-debug</VersionSuffix>
        <BuildDateYear>$([System.String]::Format("{0:yyyy}", $([System.DateTime]::UtcNow)))</BuildDateYear>
        <ReleaseNotesFilePath>$(SolutionDir)$(SolutionName).ReleaseNotes.md</ReleaseNotesFilePath>
        <PackageReleaseNotes>N/A</PackageReleaseNotes>
        <IsAppveyorBuild>false</IsAppveyorBuild>
    </PropertyGroup>

    <Target Name="CheckBuildPropertiesBeforeBuild" BeforeTargets="Clean;Build;Restore">
        <Message
                Text="[$(MSBuildProjectName):$(TargetFramework):$(Configuration):$(Platform)] NETCoreSdkVersion = &quot;$(NETCoreSdkVersion)&quot;, SolutionDir = &quot;$(SolutionDir)&quot;, SolutionName = &quot;$(SolutionName)&quot;"
                Importance="high" />

        <Error Condition="'$(SolutionDir)' == '' Or '$(SolutionName)' == '' Or '$(SolutionDir)' == '*Undefined*' Or '$(SolutionName)' == '*Undefined*'"
                Text="[$(MSBuildProjectName):$(TargetFramework):$(Configuration):$(Platform)] Individual projects cannot be built. Please build the entire solution." />
    </Target>

    <Target Name="PrintBuildPropertiesBeforeBuild" BeforeTargets="Build">
        <Message
                Text="[$(MSBuildProjectName):$(TargetFramework)] AssemblyVersion = &quot;$(AssemblyVersion)&quot;, PackageVersion = &quot;$(PackageVersion)&quot;, InformationalVersion = &quot;$(InformationalVersion)&quot;"
                Importance="high" />
    </Target>

    <PropertyGroup>
        <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    </PropertyGroup>

    <PropertyGroup>
        <LangVersion>11.0</LangVersion>
        <Nullable>enable</Nullable>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <WarningsAsErrors />
        <RunSettingsFilePath>$(SolutionDir)$(SolutionName).runsettings</RunSettingsFilePath>
        <CheckEolTargetFramework>false</CheckEolTargetFramework>
    </PropertyGroup>

    <PropertyGroup>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>portable</DebugType>
        <EmbedAllSources>true</EmbedAllSources>
        <Deterministic>true</Deterministic>
    </PropertyGroup>

    <PropertyGroup>
        <Authors>Vitalii Maklai</Authors>
        <Company>$(Authors)</Company>
        <Product>$(SolutionName)</Product>
        <Description>$(Product) is the ultimate solution for .NET developers who want to streamline their development process. It provides its own helper and functional classes and interfaces as well as the extension methods for the standard .NET types. $(Product) is compatible with the older and newer .NET versions. It's the perfect way to reduce errors and save time, allowing developers to focus on creating quality code.</Description>
        <Copyright>Copyright © $(Authors) 2004-$(BuildDateYear)</Copyright>
        <RepositoryUrl>https://github.com/HarinezumiSama/$(SolutionName)</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PackageProjectUrl>$(RepositoryUrl)</PackageProjectUrl>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageReleaseNotes>$([System.IO.File]::ReadAllText($(ReleaseNotesFilePath)))</PackageReleaseNotes>
        <PackageTags>C#;CSharp;omnifactotum;omni;factotum;aid;assistant;extension;extensions;helper;helpers;common;typical</PackageTags>
        <IncludeSymbols>true</IncludeSymbols>
        <IncludeSource>true</IncludeSource>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <EnablePackageValidation>false</EnablePackageValidation>
        <MinClientVersion>5.4.0</MinClientVersion>
        <EnableStrictModeForCompatibleTfms>true</EnableStrictModeForCompatibleTfms>
        <EnableStrictModeForCompatibleFrameworksInPackage>false</EnableStrictModeForCompatibleFrameworksInPackage>
    </PropertyGroup>

    <PropertyGroup>
        <__TestResultsSubdirectory>TestResults</__TestResultsSubdirectory>
        <__RootSolutionOutputPathBase>$(SolutionDir)\.out</__RootSolutionOutputPathBase>
        <__RootSolutionOutputPath>$([System.IO.Path]::GetFullPath($(__RootSolutionOutputPathBase)))</__RootSolutionOutputPath>
        <OutputPath>$(__RootSolutionOutputPath)\bin\$(Platform)\$(Configuration)\$(MSBuildProjectName)\</OutputPath>
        <BaseIntermediateOutputPath>$(__RootSolutionOutputPath)\obj\$(MSBuildProjectName)\</BaseIntermediateOutputPath>
        <PackageOutputPath>$(__RootSolutionOutputPath)\NuGet\</PackageOutputPath>
        <VSTestResultsDirectory>$(OutputPath)$(__TestResultsSubdirectory)</VSTestResultsDirectory>
    </PropertyGroup>

    <Target Name="CleanTestResults" AfterTargets="Clean">
        <RemoveDir Directories="$(VSTestResultsDirectory)" Condition="Exists($(VSTestResultsDirectory))" ContinueOnError="true" />
    </Target>

    <PropertyGroup>
        <PackageVersion>$(Version)$(VersionSuffix)</PackageVersion>
        <AssemblyVersion>$(Version).0</AssemblyVersion>
        <FileVersion>$(Version).0</FileVersion>
        <InformationalVersion>$(Version)$(VersionSuffix)</InformationalVersion>
    </PropertyGroup>

    <PropertyGroup Condition="'$(SolutionDir)' != '' And '$(SolutionName)' != ''">
        <SignAssembly>true</SignAssembly>
        <DelaySign>false</DelaySign>
        <AssemblyOriginatorKeyFile>$(SolutionDir)\Common\$(SolutionName).snk</AssemblyOriginatorKeyFile>
    </PropertyGroup>
</Project>