Key = {Tuple<String, Array> :: Item1 = {String :: "Omnifactotum.Tests.FactotumTests+ToPropertyStringCases"}, Item2 = {Int32[] :: [Elements] = {{Int32 :: 1}, {Int32 :: 2}, {Int32 :: 5}}, Length = {Int32 :: 3}, LongLength = {Int64 :: 3}, Rank = {Int32 :: 1}, SyncRoot = {Int32[] :: { <- }}, IsReadOnly = {Boolean :: False}, IsFixedSize = {Boolean :: True}, IsSynchronized = {Boolean :: False}}}, Value = {Tuple<Object, String> :: Item1 = {Tuple<String, Array> :: Item1 = {String :: "Omnifactotum.Tests.FactotumTests+ToPropertyStringCases"}, Item2 = {Int32[] :: [Elements] = {{Int32 :: 1}, {Int32 :: 2}, {Int32 :: 5}}, Length = {Int32 :: 3}, LongLength = {Int64 :: 3}, Rank = {Int32 :: 1}, SyncRoot = {Int32[] :: { <- }}, IsReadOnly = {Boolean :: False}, IsFixedSize = {Boolean :: True}, IsSynchronized = {Boolean :: False}}}, Item2 = {String :: "Omnifactotum.Tests.FactotumTests+ToPropertyStringCases"}}