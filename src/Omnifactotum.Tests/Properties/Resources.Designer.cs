//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Omnifactotum.Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Omnifactotum.Tests.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OmnifactotumGenericObjectExtensionsTests.PointerContainer :: IntPointer:int* = {{Pointer :: {0}}}, IntPtr:IntPtr = {{IntPtr :: {1}}}, UIntPtr:UIntPtr = {{UIntPtr :: {2}}}, Value:string = {{string :: &quot;SomePointer&quot;}}.
        /// </summary>
        internal static string ExpectedClassWithFlagsEnumAndTypeAndAssemblyPropertiesToPropertyStringTemplate {
            get {
                return ResourceManager.GetString("ExpectedClassWithFlagsEnumAndTypeAndAssemblyPropertiesToPropertyStringTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OmnifactotumGenericObjectExtensionsTests.ClassWithPropertyGetterThrowingException :: Property1Good:int = {int :: 42}, Property2Bad:DateTime = { Error getting property value: [NotImplementedException] Never gonna be implemented. }, Property3Good:string = {string :: &quot;Some value&quot;}.
        /// </summary>
        internal static string ExpectedClassWithPropertyGetterThrowingExceptionToPropertyString {
            get {
                return ResourceManager.GetString("ExpectedClassWithPropertyGetterThrowingExceptionToPropertyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KeyValuePair&lt;Tuple&lt;string, Array&gt;, Tuple&lt;object, string&gt;&gt; :: Key:Tuple&lt;string, Array&gt; = {Tuple&lt;string, Array&gt; :: Item1:string = {string :: &quot;Omnifactotum.Tests.ExtensionMethods.OmnifactotumGenericObjectExtensionsTests+ToPropertyStringCases&quot;}, Item2:Array = {int[] :: [Elements:int] = {{int :: 1}, {int :: 2}, {int :: 5}}, IsFixedSize:bool = {bool :: True}, IsReadOnly:bool = {bool :: False}, IsSynchronized:bool = {bool :: False}, Length:int = {int :: 3}, LongLength:long = {long :: 3}, Rank:int = {int :: 1}, Syn [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpectedComplexObjectAllFlagsToPropertyString {
            get {
                return ResourceManager.GetString("ExpectedComplexObjectAllFlagsToPropertyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key = {(Omnifactotum.Tests.ExtensionMethods.OmnifactotumGenericObjectExtensionsTests+ToPropertyStringCases, System.Int32[])}, Value = {((Omnifactotum.Tests.ExtensionMethods.OmnifactotumGenericObjectExtensionsTests+ToPropertyStringCases, System.Int32[]), Omnifactotum.Tests.ExtensionMethods.OmnifactotumGenericObjectExtensionsTests+ToPropertyStringCases)}.
        /// </summary>
        internal static string ExpectedComplexObjectDefaultOptionsToPropertyString {
            get {
                return ResourceManager.GetString("ExpectedComplexObjectDefaultOptionsToPropertyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key = {Item1 = &quot;Omnifactotum.Tests.ExtensionMethods.OmnifactotumGenericObjectExtensionsTests+ToPropertyStringCases&quot;, Item2 = {[Elements] = {1, ...}, Length = 3, LongLength = 3, Rank = 1, SyncRoot = { int[] :: &lt;- }, IsReadOnly = False, IsFixedSize = True, IsSynchronized = False}}, Value = {Item1 = {Item1 = &quot;Omnifactotum.Tests.ExtensionMethods.OmnifactotumGenericObjectExtensionsTests+ToPropertyStringCases&quot;, Item2 = {[Elements] = {1, ...}, Length = 3, LongLength = 3, Rank = 1, SyncRoot = { int[] :: &lt;- }, IsRea [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpectedComplexObjectMaxOneItemToPropertyString {
            get {
                return ResourceManager.GetString("ExpectedComplexObjectMaxOneItemToPropertyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key = {Tuple&lt;string, Array&gt; :: Item1 = {string :: &quot;Omnifactotum.Tests.ExtensionMethods.OmnifactotumGenericObjectExtensionsTests+ToPropertyStringCases&quot;}, Item2 = {int[] :: [Elements] = {{int :: 1}, {int :: 2}, {int :: 5}}, Length = {int :: 3}, LongLength = {long :: 3}, Rank = {int :: 1}, SyncRoot = {int[] :: { &lt;- }}, IsReadOnly = {bool :: False}, IsFixedSize = {bool :: True}, IsSynchronized = {bool :: False}}}, Value = {Tuple&lt;object, string&gt; :: Item1 = {Tuple&lt;string, Array&gt; :: Item1 = {string :: &quot;Omnifactotu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpectedComplexObjectWithActualTypeToPropertyString {
            get {
                return ResourceManager.GetString("ExpectedComplexObjectWithActualTypeToPropertyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OmnifactotumGenericObjectExtensionsTests.RecursiveNode[] :: [Elements:OmnifactotumGenericObjectExtensionsTests.RecursiveNode] = {{OmnifactotumGenericObjectExtensionsTests.RecursiveNode :: Parent:OmnifactotumGenericObjectExtensionsTests.RecursiveNode = {OmnifactotumGenericObjectExtensionsTests.RecursiveNode :: Parent:OmnifactotumGenericObjectExtensionsTests.RecursiveNode = {OmnifactotumGenericObjectExtensionsTests.RecursiveNode :: { &lt;- }}, Value:string = {string :: &quot;Child&quot;}}, Value:string = {string :: &quot;Root&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpectedComplexObjectWithCyclesAllFlagsToPropertyString {
            get {
                return ResourceManager.GetString("ExpectedComplexObjectWithCyclesAllFlagsToPropertyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OmnifactotumGenericObjectExtensionsTests.RecursiveNode[] :: [Elements] = {{Value = &quot;Root&quot;, Parent = {Value = &quot;Child&quot;, Parent = { OmnifactotumGenericObjectExtensionsTests.RecursiveNode :: &lt;- }}}, {Value = &quot;Child&quot;, Parent = {Value = &quot;Root&quot;, Parent = { OmnifactotumGenericObjectExtensionsTests.RecursiveNode :: &lt;- }}}, {Value = &quot;Grandchild&quot;, Parent = {Value = &quot;Child&quot;, Parent = {Value = &quot;Root&quot;, Parent = { OmnifactotumGenericObjectExtensionsTests.RecursiveNode :: &lt;- }}}}}, Length = 3, LongLength = 3, Rank = 1, Syn [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpectedComplexObjectWithCyclesWithComplexPropertiesToPropertyString {
            get {
                return ResourceManager.GetString("ExpectedComplexObjectWithCyclesWithComplexPropertiesToPropertyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key:Tuple&lt;string, Array&gt; = {Item1:string = &quot;Omnifactotum.Tests.ExtensionMethods.OmnifactotumGenericObjectExtensionsTests+ToPropertyStringCases&quot;, Item2:Array = {[Elements:int] = {1, 2, 5}, Length:int = 3, LongLength:long = 3, Rank:int = 1, SyncRoot:object = { int[] :: &lt;- }, IsReadOnly:bool = False, IsFixedSize:bool = True, IsSynchronized:bool = False}}, Value:Tuple&lt;object, string&gt; = {Item1:object = {Item1:string = &quot;Omnifactotum.Tests.ExtensionMethods.OmnifactotumGenericObjectExtensionsTests+ToPropertyStringC [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpectedComplexObjectWithMemberTypeToPropertyString {
            get {
                return ResourceManager.GetString("ExpectedComplexObjectWithMemberTypeToPropertyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression&lt;Func&lt;String&gt;&gt; :: Body:Expression = {InstanceMethodCallExpressionN :: Arguments:ReadOnlyCollection&lt;Expression&gt; = {TrueReadOnlyCollection&lt;Expression&gt; :: [Elements:Expression] = {}, Count:Int32 = {Int32 :: 0}, Items:IList&lt;Expression&gt; = {Expression[] :: [Elements:Expression] = {}, IsFixedSize:Boolean = {Boolean :: True}, IsReadOnly:Boolean = {Boolean :: False}, IsSynchronized:Boolean = {Boolean :: False}, Length:Int32 = {Int32 :: 0}, LongLength:Int64 = {Int64 :: 0}, Rank:Int32 = {Int32 :: 1}, SyncRoo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpectedLinqExpressionToPropertyString {
            get {
                return ResourceManager.GetString("ExpectedLinqExpressionToPropertyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Elements] = {{Value = &quot;Root&quot;, Parent = {Value = &quot;Child&quot;, Parent = { OmnifactotumGenericObjectExtensionsTests.RecursiveNode :: &lt;- }}}, {Value = &quot;Child&quot;, Parent = {Value = &quot;Root&quot;, Parent = { OmnifactotumGenericObjectExtensionsTests.RecursiveNode :: &lt;- }}}, {Value = &quot;Grandchild&quot;, Parent = {Value = &quot;Child&quot;, Parent = {&lt;Max recursion level reached&gt;}}}}, Length = 3, LongLength = 3, Rank = 1, SyncRoot = { OmnifactotumGenericObjectExtensionsTests.RecursiveNode[] :: &lt;- }, IsReadOnly = False, IsFixedSize = True, IsSy [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpectedMaxRecursionToPropertyString {
            get {
                return ResourceManager.GetString("ExpectedMaxRecursionToPropertyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OmnifactotumGenericObjectExtensionsTests.PointerContainer :: IntPointer:int* = {{Pointer :: {0}}}, IntPtr:IntPtr = {{IntPtr :: {1}}}, UIntPtr:UIntPtr = {{UIntPtr :: {2}}}, Value:string = {{string :: &quot;SomePointer&quot;}}.
        /// </summary>
        internal static string ExpectedPointerContainerToPropertyStringTemplate {
            get {
                return ResourceManager.GetString("ExpectedPointerContainerToPropertyStringTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VirtualTreeNode&lt;DateTimeOffset&gt; :: Children:VirtualTreeNodeCollection&lt;DateTimeOffset&gt; = {VirtualTreeNodeCollection&lt;DateTimeOffset&gt; :: [Elements:VirtualTreeNode&lt;DateTimeOffset&gt;] = {}, Count:int = {int :: 0}, IsReadOnly:bool = {bool :: False}}, Parent:VirtualTreeNodeBase&lt;DateTimeOffset&gt; = {VirtualTreeNodeBase&lt;DateTimeOffset&gt; :: &lt;null&gt;}, Value:DateTimeOffset = {DateTimeOffset :: 2011-12-31 13:59:58.3210000 UTC-02:00}.
        /// </summary>
        internal static string ExpectedVirtualTreeNodeWithDateTimeOffsetToPropertyString {
            get {
                return ResourceManager.GetString("ExpectedVirtualTreeNodeWithDateTimeOffsetToPropertyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VirtualTreeNode&lt;DateTime&gt; :: Children:VirtualTreeNodeCollection&lt;DateTime&gt; = {VirtualTreeNodeCollection&lt;DateTime&gt; :: [Elements:VirtualTreeNode&lt;DateTime&gt;] = {}, Count:int = {int :: 0}, IsReadOnly:bool = {bool :: False}}, Parent:VirtualTreeNodeBase&lt;DateTime&gt; = {VirtualTreeNodeBase&lt;DateTime&gt; :: &lt;null&gt;}, Value:DateTime = {DateTime :: 2011-12-31 13:59:58.3210000}.
        /// </summary>
        internal static string ExpectedVirtualTreeNodeWithDateTimeToPropertyString {
            get {
                return ResourceManager.GetString("ExpectedVirtualTreeNodeWithDateTimeToPropertyString", resourceCulture);
            }
        }
    }
}
