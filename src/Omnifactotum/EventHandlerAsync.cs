#nullable enable

using System.Threading;
using System.Threading.Tasks;

namespace Omnifactotum
{
    /// <summary>
    ///     Represents the asynchronous method that will handle an event when the event provides data.
    /// </summary>
    /// <typeparam name="TEventArgs">
    ///     The type of the event data generated by the event.
    /// </typeparam>
    /// <param name="sender">
    ///     The source of the event.
    /// </param>
    /// <param name="eventArgs">
    ///     An object that contains the event data.
    /// </param>
    /// <param name="cancellationToken">
    ///     The token to monitor for cancellation requests.
    /// </param>
    public delegate Task EventHandlerAsync<in TEventArgs>(object? sender, TEventArgs eventArgs, CancellationToken cancellationToken);
}